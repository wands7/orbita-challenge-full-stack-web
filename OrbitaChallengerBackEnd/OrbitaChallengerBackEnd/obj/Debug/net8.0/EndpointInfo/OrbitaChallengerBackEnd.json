{
  "openapi": "3.0.1",
  "info": {
    "title": "OrbitaChallengerBackEnd",
    "version": "1.0"
  },
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/getAll": {
      "get": {
        "tags": [
          "Student"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/getByName": {
      "get": {
        "tags": [
          "Student"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/add": {
      "post": {
        "tags": [
          "Student"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Student"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Student"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Student"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/edit": {
      "post": {
        "tags": [
          "Student"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Student"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Student"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Student"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/search": {
      "get": {
        "tags": [
          "Student"
        ],
        "parameters": [
          {
            "name": "searchTerm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StudentResultViewModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentResultViewModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentResultViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/delete/{ra}": {
      "post": {
        "tags": [
          "Student"
        ],
        "parameters": [
          {
            "name": "ra",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/getByRA/{ra}": {
      "get": {
        "tags": [
          "Student"
        ],
        "parameters": [
          {
            "name": "RA",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "LoginModel": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Student": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "ra": {
            "type": "string",
            "nullable": true
          },
          "cpf": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StudentResultViewModel": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/Student"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Enter your JWT token.\n\nExample: eyJhbGciOiJIUzI1NiIsInR5cCI6...",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}